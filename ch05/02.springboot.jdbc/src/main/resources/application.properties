
################### DataSource Configuration ##########################

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/springboot_jdbc?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=12345678

spring.datasource.initialize=true
 spring.datasource.initialization-mode=always 

spring.datasource.schema=schema-mysql.sql
spring.datasource.data=data-mysql.sql

# Spring Boot can automatically create the schema (DDL scripts) of your DataSource and initialize it (DML scripts).
# It loads SQL from the standard root classpath locations: schema.sql and data.sql, respectively

# In addition, Spring Boot processes the schema-${platform}.sql and data-${platform}.sql files (if present), where platform is the value of
# spring.datasource.platform. This allows you to switch to database-specific  scripts if necessary. For example, you might choose to set it to the vendor
# name of the database (hsqldb, h2, oracle, mysql, postgresql, and so on).


# Spring Boot automatically creates the schema of an embedded DataSource. This behaviour can be customized by using the spring.datasource.initialization-mode property. 
# For instance, if you want to always initialize the DataSource regardless of its type:
# spring.datasource.initialization-mode=always

# https://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html