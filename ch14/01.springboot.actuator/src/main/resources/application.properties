

# Displaying detailed health information

management.endpoint.health.show-details=always


# If you added any information about the application in the application.properties file using the 
# info.app.* properties, then you can view it at the http://localhost:8080/actuator/info endpoint.


# INFO ENDPOINT CONFIGURATION
info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# Automatically Expand Properties at Build Time
## https://docs.spring.io/spring-boot/docs/current/reference/html/howto-properties-and-configuration.html#howto-automatic-expansion

# By default, all the actuator endpoints are exposed over JMX but only 
# the health and info endpoints are exposed over HTTP.

# management.endpoints.web.exposure.include=health,info
management.endpoints.web.exposure.include=* 


# To be able to test the above configuration with HTTP basic authentication, 
# you can add a default spring security user in
# Spring Security Default user name and password
spring.security.user.name =admin
spring.security.user.password=admin
spring.security.user.roles = ACTUATOR_ADMIN


#You can customize the actuator endpoint URL by setting the 
# management.endpoints.web.base-path.=/actuator-new-path

# You can set the management.server.port property to change the HTTP port,
 # management.server.port=8081
 
 
 # Auto-configuration enables the instrumentation of all available Hibernate EntityManagerFactory instances 
 # that have statistics enabled with a metric named hibernate.
 spring.jpa.properties.hibernate.generate_statistics=true
 
 ## http://localhost:8080/actuator/metrics